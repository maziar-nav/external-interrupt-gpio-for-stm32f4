//first config gpio pin that you wanna have external interrupt gpio on it 
//then add inerrupt .h and .c file to your project from std library.









void EXTI10_Config(void)
{
  EXTI_InitTypeDef   EXTI_InitStructure;
 

  GPIO_InitTypeDef   GPIO_InitStructure;
 

  NVIC_InitTypeDef   NVIC_InitStructure;
  /* Enable GPIOB clock */

 

  RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOB, ENABLE);
  /* Configure PB4 pin as input floating */

 

  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;
 

  GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
 

  GPIO_InitStructure.GPIO_Pin = GPIO_Pin_10;
 

  GPIO_Init(GPIOB, &GPIO_InitStructure);
  /* Enable SYSCFG clock */

 

  RCC_APB2PeriphClockCmd(RCC_APB2Periph_SYSCFG, ENABLE);
  /* Connect EXTI4 Line to PB4 pin */

 

  SYSCFG_EXTILineConfig(EXTI_PortSourceGPIOB, EXTI_PinSource10);
  /* Configure EXTI4 line */

 

  EXTI_InitStructure.EXTI_Line = EXTI_Line10;
 

  EXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;
 

  EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Rising_Falling;
 

  EXTI_InitStructure.EXTI_LineCmd = ENABLE;
 

  EXTI_Init(&EXTI_InitStructure);
  /* Enable and set EXTI4 Interrupt to the lowest priority */

 

  NVIC_InitStructure.NVIC_IRQChannel = EXTI15_10_IRQn;
 

  NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 3;
 

  NVIC_InitStructure.NVIC_IRQChannelSubPriority = 3;
 

  NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
 

  NVIC_Init(&NVIC_InitStructure);
 

}


void EXTI15_10_IRQHandler(void)
{
   if (EXTI_GetITStatus(EXTI_Line10) == SET)
  {
 

    /* Clear the EXTI line 4 pending bit */
 

        EXTI_ClearITPendingBit(EXTI_Line10);
 
   while(1){

	 }

  }
 

}
 
